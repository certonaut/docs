{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to certonaut documentation","text":"<p>Certonaut is a Rust\u2011native ACME (RFC 8555) client and library for fully automated issuance, renewal, and management of X.509 certificates. Supports HTTP-01 and DNS-01 challenges, in a fully guided interactive mode. Features a (Linux-only) eBPF \u201cmagic\u201d solver to solve HTTP-01 challenges automatically.</p> <p>Warning</p> <p>Certonaut is currently in an alpha state. While basic functionality is there, there are still a lot of unfinished rough edges, bugs, and unstable features. It is currently not recommended to deploy certonaut in production.</p> <p>Get started with certonaut now.</p>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>This guide will get you up and running with certonaut. We'll start with installing certonaut and then go over basic usage.</p>"},{"location":"getting-started/installation/#supported-platforms","title":"Supported platforms","text":"<ul> <li>Linux x86-64 (amd64)</li> <li>Linux x86-32 (i386)</li> <li> Linux aarch64 [PLANNED, IN DEVELOPMENT]</li> <li> Windows x86-64 (amd64) [PLANNED, IN DEVELOPMENT]</li> <li> Windows aarch64 (amd64) [PLANNED, IN DEVELOPMENT]</li> </ul>"},{"location":"getting-started/installation/#installing-certonaut","title":"Installing certonaut","text":"<p>[In the future, certonaut will offer binary downloads. These will be explained here. Right now, certonaut can only be build from source]</p>"},{"location":"getting-started/installation/#building-from-source","title":"Building from source","text":"<p>Certonaut can be build in multiple configurations</p> <p>Certonaut features an eBPF-based solver to automatically answer HTTP-01 challenges without webserver configuration. However, this solver requires several additional dependencies. You can also build a \"lite\" version of certonaut without these features. Below, you can select your intended configuration, which will show you build steps for the selected configuration.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<p>In order to build certonaut from source, you'll need the following tools installed on your machine:</p> All FeaturesLite <ul> <li>The Rust compiler and its package manager cargo. On most platforms, the easiest way to get them is via the official installer, rustup.</li> <li>A C/C++ compiler (1), <code>clang</code> (other compilers won't work, as eBPF requires compiler-specific features).</li> <li>cmake, on Windows (2)</li> <li>To build several C libraries from source (libelf, zlib, and libbpf), you also need C build tools: autoconf, autopoint, flex, bison, gawk, make and pkg-config.</li> </ul> <ul> <li>The Rust compiler and its package manager cargo. On most platforms, the easiest way to get them is via the official installer, rustup.</li> <li>Any C/C++ compiler (3)</li> <li>cmake, on Windows (4)</li> </ul> <ol> <li> certonaut's main C/C++ dependency is aws-lc-rs. If you have trouble compiling the C libraries, you should probably review their compilation guide.</li> <li> certonaut's main C/C++ dependency is aws-lc-rs. If you have trouble compiling the C libraries, you should probably review their compilation guide.</li> <li> certonaut's main C/C++ dependency is aws-lc-rs. If you have trouble compiling the C libraries, you should probably review their compilation guide.</li> <li> certonaut's main C/C++ dependency is aws-lc-rs. If you have trouble compiling the C libraries, you should probably review their compilation guide.</li> </ol> <p>On Debian/Ubuntu systems, you should install Rust via rustup and obtain the C dependencies via apt-get:</p> All FeaturesLite <pre><code>sudo apt-get update\nsudo apt-get install --no-install-recommends \\\n    clang \\\n    build-essential \\\n    autoconf \\\n    autopoint \\\n    flex \\\n    bison \\\n    gawk \\\n    make \\\n    pkg-config\n</code></pre> <pre><code>sudo apt-get update\nsudo apt-get install --no-install-recommends build-essential\n</code></pre>"},{"location":"getting-started/installation/#compiling","title":"Compiling","text":"<p>Simply use cargo to compile &amp; install:</p> All FeaturesLite <pre><code>cargo install --all-features --git https://github.com/certonaut/certonaut.git --bin certonaut\n</code></pre> <pre><code>cargo install --git https://github.com/certonaut/certonaut.git --bin certonaut\n</code></pre> <p>If everything is succesful, the installed <code>certonaut</code> binary should be in <code>~/.cargo/bin/certonaut</code> (which should also be in your path).</p>"},{"location":"getting-started/installation/#next-steps","title":"Next steps","text":"<p>After having installed certonaut, head over to usage</p>"},{"location":"getting-started/usage/","title":"Usage","text":"<p>Certonaut offers two modes of operation:</p> <ul> <li>a pure command\u2011line invocation for scripts and automation (or just preferences)</li> <li>and and an interactive terminal menu for guided workflows.</li> </ul> <p>It is possible to mix command-line and interactive options: The command-line options will be automatically applied, skipping interactive options. Interactive options can still add or override the command-line options.</p>"},{"location":"getting-started/usage/#commandline-noninteractive-mode","title":"Command\u2011Line (Non\u2011Interactive) Mode","text":"<p>Invoke <code>certonaut</code> with explicit subcommands to automate tasks in CI/CD pipelines, cron jobs, or scripts. Interactive prompts are automatically disabled when run in non\u2011TTY environments. You can also force certonaut to disable interactive prompts by invoking certonaut as <code>certonaut --non-interactive</code>.</p> <p>Basic usage:</p> <pre><code>certonaut [GLOBAL OPTIONS] &lt;SUBCOMMAND&gt; [SUBCOMMAND OPTIONS]\n</code></pre> <p>Use <code>certonaut --help</code> for available subcommands and their documentation.</p>"},{"location":"getting-started/usage/#interactive-mode","title":"Interactive Mode","text":"<p>Launch a fully interactive session with a selection menu that guides you through all commands:</p> <pre><code>certonaut\n</code></pre> <p>This requires a TTY terminal to work.</p>"}]}